include ../mixins/label
include ../mixins/article
include ../mixins/section



+section('Skunkworks / Intern Ideas')
  article
    .row
      .col-md-5
        ul.list-unstyled
          li
            h4 Try It
              +label('e\'rybody', 'success')
            :markdown
              `mongoscope` is still very very much a work in progress
              and having extra sets of eyes to say where things are
              truly horrible or even better, lend a hand to implement
              those fixes, would be extremely appreciated.

          li
            h4 python.js
              +label('js', 'danger')
            :markdown
              Most of the good people of MongoDB are extremely comfortable
              with python and not so much with the JavaScript.  There
              is also a lot of existing code for MongoDB university,
              examples, and hacks that it would be nice to bring online.
              One way to approach this problem is compiling all of CPython
              with Emscripten, as the
              [repl.it folks have](http://repl.it/languages/Python), but appears
              overkill for our purposes.  Another is to create a grammar
              in says
              [json as these folks have](https://github.com/jhester/python-online)
              and merely stub what we need;  That is, just having a very small
              slice of the grammar like list comprehensions that plug in
              to an interface to get actual data, would be *huge* for productivity.

          li
            h4 Memory Stats
              +label('js', 'danger')

            :markdown
              There are now several collection memory tools
              floating around GitHub, which means we need to support
              this officially.  [mongomem](http://bit.ly/1iDkSag)
              is the most complete.  This will involve creating a new
              `fincore` binary add-on to determine which pages for
              a given collection are resident in memory.
              See [@geocarr/mmap](http://git.io/17EX-w) as a base to
              get started.

          li
            h4 Collection Sampling
              +label('kernel', 'default')
            p
              | If mongod had built-in resevoir sampling of documents
              | in a collection would allow observing sparseness,
              | outliers, hot corners, and a lot more.
          li
            h4 Query Linter
              +label('js', 'danger')
              +label('kernel', 'default')

            p Catch the dumb stuff while it's still in the editor,
              | not hanging with the global lock.
          li
            h4 Datasets
              +label('intern', 'info')
            :markdown
              Figuring out whether a feature is actually going to
              work/be useful would be dramatically easier with
              real datasets to use like [replicating wikipedia](http://blueqnx.github.io/wikinmongo/)
              or the npm registry.

          li
            h4 Emscripten
              +label('js', 'danger')
              +label('kernel', 'default')
            :markdown
              There is a lot of business logic in the server that
              would cut down on a lot of mistakes and bad information
              if it was portable: everything from the query language
              and planner to what `ActionSet`'s a built-in role
              has access to.

      .col-md-5.col-md-push-2
        ul.list-unstyled
          li
            h4 Structured Data from docs
              +label('intern', 'info')
            p
              | Parse the mongo docs from RST to JSON for things
              | like autocomplete for the webshell, help annotations
              | in the Security/Replication/Sharding UI's.  The initial
              | script hack is pretty trivial but working with the docs
              | team to make things highly reliable, as well as updating
              | existing docs will take some time.

          li
            h4 Visualization
              +label('js', 'danger')
              +label('dataviz', 'warning')
            p there are a lot of hard visualization problems with
              | sharding, replication, and security that would
              | be a great fit for summer research.
          li
            h4 Chrome/atom/Sublime Text
              +label('js', 'danger')
            P
              | Being able to interact with mongod over vanilla HTTP
              | means you can move mongo closer to users than the other
              | way around.  Things like a Chrome app to run queries
              | right from a github repo or keeping an eye on mongotop
              | while you're working on your python app would be extremely
              | useful.
          li
            h4 Phonegap
              +label('js', 'danger')
            p
              | who doesn't like looking at pretty charts or running
              | queries to get the latest signup counts from their
              | pocket?

    .row
      .col-md-12
        h3 Contribute/Collaborate on Existing Projects
        :markdown
          #### Visualization/Charting/Dashboards
          - [@CarlosCondor/chartFromMongo](https://github.com/CarlosCondor/chartFromMongo)

          #### Dataset Importers/Ingestion
          - [@blueqnx/wikinmongo](http://blueqnx.github.io/wikinmongo/)
          - [@kaniska/project-mongo-logviewer](https://github.com/kaniska/project-mongo-logviewer)

          #### Workshops
          - [mongodbschool.io](http://mongodbschool.io/)
          - [@sridharn/dataweek_2013](https://github.com/sridharn/dataweek_2013)
          - [@RyanMullins/Tutorial-LeafletMongoDB](https://github.com/RyanMullins/Tutorial-LeafletMongoDB)
