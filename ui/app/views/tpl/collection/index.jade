include ../mixins/bytes
include ../mixins/cog
include ../mixins/nf

- stats = collection.stats;
- stats.document_size_average = (stats.document_size/stats.document_count);
- stats.index_size_per_document = (stats.index_size/stats.document_count);

ol.breadcrumb(style='margin-bottom: 0;')
  unless context.deployment.type === 'standalone'
    li: a(href='#mongodb/#{context.deployment.id}') #{context.deployment.name}
  li: a(href='#mongodb/#{context.instance.id}') #{context.instance.name}
  li: a(href='##{context.instance.id}/database/#{collection.database}') #{collection.database}
  li #{collection.name}

.col-md-10(style='height: 100%; padding-right: 0;')
  .content
    h1.page-header #{collection.name}
    .flags
      if collection.is_power_of_two
        span.label.label-default PowerOf2

      if collection.is_capped
        span.label.label-default Capped

      if collection.is_ttl
        span.label.label-default TTL

    .statsbar
      .col-md-3
        .statsbox
          .statsbox-name Documents
          .statsbox-count
            +nf(collection.stats.document_count)
          .statsbox-size
            +bytes(collection.stats.document_size)
          .statsbox-average-size avg&nbsp;
            +bytes(collection.stats.document_size/collection.stats.document_count)
      .col-md-3
        .statsbox
          .statsbox-name Indexes
          .statsbox-count
            +nf(collection.stats.index_count)
          .statsbox-size
            +bytes(collection.stats.index_size)
          .statsbox-average-size avg&nbsp;
            +bytes(collection.stats.index_size/collection.stats.index_count)
      .col-md-3
        .statsbox
          .statsbox-name Index Storage Cost
          .statsbox-count
            +nf(collection.stats.index_size/collection.stats.storage_size*100, 2)
            | %
          .statsbox-size
            +bytes(collection.stats.index_size/collection.stats.document_count)
          .statsbox-average-size per index/document
      .col-md-3
        .statsbox
          .statsbox-name Padding factor
          .statsbox-count
            +nf(collection.stats.padding_factor)
          .statsbox-size #{collection.stats.extent_count} extents
          .statsbox-average-size last extent&nbsp;
            +bytes(collection.stats.extent_last_size)


    .explorer

    .detail

#contextbar.col-md-2(style='height: 100%;padding-top: 31px;')
  h4 indexes
  ul.list-group
    each index in collection.indexes
      li.list-group-item
        table.table
          tr
            td.key #{JSON.stringify(index.key).replace(/"|\{|\}/g, '')}
            td.value
              +bytes(index.size)
          if index.sparse
            tr
              td.key sparse
              td.value true
          tr
            td.key raw
            td.value: pre: code #{JSON.stringify(index, null, 2)}



