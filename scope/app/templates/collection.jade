include mixins/bytes
include mixins/cog

- stats = collection.stats;
- stats.document_size_average = (stats.document_size/stats.document_count);
- stats.index_size_per_document = (stats.index_size/stats.document_count);

.row
  .col-md-10
    .collection-creek
      .name #{collection.name}
      ul.stats
        li #{stats.index_count} indexes
        li #{stats.document_count} docs
    .explorer(style="margin-top: 200px;")

  .stats.col-md-2(style="padding-left: 0;padding-right: 0;")
    .panel.panel-default
      .panel-heading
        h3(style="margin-bottom: 0;") #{collection.name}
        h5(style="margin-bottom: 0; margin-top: 0;")
          a(href="#database/#{collection.database}") #{collection.database}

      .panel-heading
        h5 Documents #{collection.stats.document_count}
      ul.list-group.panel-body
        li.list-group-item
          span.badge
            +bytes(collection.stats.document_size)
          strong Total
        li.list-group-item
          span.badge
            +bytes(stats.document_size_average)
          strong Average
      .panel-heading
        h5 Indexes #{collection.indexes.length}
        //- h4
        //-   +bytes(collection.stats.index_size)
        //- h4
        //-   +bytes(stats.index_size_per_document)
        //-   | per

      ul.list-group.panel-body
       - for index in collection.indexes
        li.list-group-item
          span.badge
            +bytes(index.size)
          //- code #{JSON.stringify(index.key)}
          | #{index.name}
      .panel-heading
        h5 Advanced
      ul.list-group.panel-body
        li.list-group-item
          span.badge
            +bytes(collection.stats.extent_last_size)
          strong Last Extent

        li.list-group-item
          span.badge #{collection.stats.extent_count}
          strong Extents

        li.list-group-item
          span.badge #{collection.stats.padding_factor}
          strong Padding Factor

